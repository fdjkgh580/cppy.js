{"version":3,"sources":["jquery.cppy.js"],"names":["$","global_version","global_org_template","global_isinit","global_selector","cppy","append","version","create","param","_cppy","_deep_key","_glue","this","prepare_data","data","obj","each","key","ele","type","_switch_background","html","target","find","element","url","attr","tagName","css","removeAttr","outerHTML","_deep_each_row","rowkey","row","_deep_key_clone","_deep_key_name","cellkey","cell","_deep","_deep_is_val","list","info","delete_key","str","box","extend","name","_deep_key_root","flatten","datalist","lkey","datainfo","template","_is_init","clone","timestamp","Date","getTime","cppy_class","template_html","boxkey","key2val","mix_html_code","join","code","val","re","RegExp","replace","_set_init","bool","put","newcode","after","first","remove","last","_display_cppy_result_template","_set_selector","_is_exist_selector","length","selector","main","input_data","temp","success","call","fn","jQuery"],"mappings":"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","file":"jquery.cppy.min.js","sourcesContent":["(function ($) {\r\n\r\n    var global_version           = \"2.1.0\";\r\n    var global_org_template      = false; // 原始模板\r\n    var global_isinit            = false;\r\n    var global_selector          = false; // 選擇棄\r\n    $.cppy                       = {}\r\n\r\n    // 預先隱藏\r\n    $(\"head\").append(\"<style>[data-cppy-temp]{display:none}</style>\");\r\n\r\n    // 版本\r\n    $.cppy.version = function (){\r\n        return global_version;\r\n    }\r\n    \r\n\r\n    $.cppy.create = function (param){\r\n    \r\n        var _cppy;\r\n\r\n        // 平坦化使用的鍵名稱。命名具有繼承關聯\r\n        var _deep_key;\r\n\r\n        // 模板黏接的符號\r\n        var _glue = \"-\";\r\n\r\n        // 無論如何都轉為二維\r\n        this.prepare_data = function (data){\r\n            var obj = {};\r\n            $.each(data, function (key, ele){\r\n                // 二維\r\n                if ($.type(ele) === \"object\"){\r\n                    obj = data;\r\n                }\r\n                // 一維\r\n                else {\r\n                    obj[0] = data;\r\n                }\r\n                return false;\r\n            })\r\n            return obj;\r\n        }\r\n\r\n        var _switch_background = function (html){\r\n\r\n            var target = $(html);\r\n\r\n            target.find(\"[data-cppy-background]\").each(function (key, element){\r\n                \r\n                var url = $(element).attr(\"data-cppy-background\");\r\n\r\n                if ($(element)[0].tagName === \"IMG\") {\r\n                    $(element).attr(\"src\", url);\r\n                }\r\n                else {\r\n                    $(element).css(\"background-image\", \"url(\"+url+\")\")\r\n                }\r\n\r\n                var result = $(element).removeAttr('data-cppy-background');\r\n\r\n            })\r\n\r\n            return target[0].outerHTML;\r\n        }\r\n\r\n\r\n        var _deep_each_row = function (rowkey, row){\r\n            \r\n            // 複製一份提供最後還原\r\n            var _deep_key_clone = _deep_key;\r\n\r\n            // _deep_key 須要串接下去\r\n            _deep_key = _deep_key_name(rowkey);\r\n\r\n            $.each(row, function (cellkey, cell){\r\n\r\n                if ($.type(cell) === \"object\"){\r\n                    _deep_key = _deep_key_name(cellkey);\r\n                }\r\n                \r\n                row = _deep(row, cellkey, cell);\r\n            });\r\n\r\n            // 還原\r\n            _deep_key = _deep_key_clone;\r\n\r\n            return row;\r\n        }\r\n\r\n        /**\r\n         * 若不是物件\r\n         * @param   list       \r\n         * @param   key        \r\n         * @param   info       \r\n         * @param   delete_key 要刪除的 key\r\n         */\r\n        var _deep_is_val = function (list, key, info, delete_key){\r\n            var str = _deep_key_name(key)\r\n            list[str] = info;\r\n            delete list[delete_key];\r\n            return list;\r\n        }\r\n\r\n\r\n        // 深入\r\n        var _deep = function (list, key, info){\r\n\r\n            // 若 info 沒有物件，那返回 list\r\n            if ($.type(info) !== \"object\") {\r\n               return _deep_is_val(list, key, info, key);\r\n            }\r\n\r\n            // 若 info 是物件，批次取得\r\n            $.each(info, function (rowkey, row){\r\n\r\n                // 若欄位是物件\r\n                if ($.type(row) === \"object\") {\r\n\r\n                    // 建立新物件\r\n                    var box = _deep_each_row(rowkey, row);\r\n                    \r\n                    // 刪除物件\r\n                    delete list[key];\r\n\r\n\r\n                    // // 刪除這個項目, 並擴充多筆 row\r\n                    $.extend(list, box);\r\n                }\r\n\r\n                // 若欄位不是物件，是字或數字\r\n                else {\r\n\r\n                    list = _deep_is_val(list, rowkey, row, key);\r\n                }\r\n            });\r\n\r\n            // console.log(list);\r\n\r\n            return list;\r\n        }\r\n\r\n        // 設定 _deep_key 名稱\r\n        var _deep_key_name = function (name){\r\n            // \"-&gt;\"\r\n            return _deep_key + _glue + name;\r\n        }\r\n\r\n        // 設定 _deep_key 原始名稱\r\n        var _deep_key_root = function (name){\r\n            _deep_key = name; // 指定 _deep_key 源頭名稱\r\n        }\r\n\r\n        // 平坦化：將二維以上的物件平坦至二維\r\n        this.flatten = function (datalist){\r\n\r\n            // 批次取得一維\r\n            $.each(datalist, function (lkey, datainfo){\r\n\r\n                // 取得一維中的每個項目\r\n                $.each(datainfo, function (rowkey, row){\r\n\r\n                    // 若底下沒物件，不處理\r\n                    if ($.type(row) !== \"object\") return true;\r\n\r\n                    // 若是物件 \r\n                    _deep_key_root(rowkey); // 設定 _deep_key 源頭名稱\r\n\r\n                    // 深入判斷是否底下有物件，並組合\r\n                    datainfo = _deep(datainfo, rowkey, row);\r\n                });\r\n\r\n            });\r\n\r\n            // console.log('\\n\\n\\n\\n');\r\n            // console.table(datalist);\r\n            return datalist;\r\n        }\r\n\r\n        // 模板處理\r\n        this.template = function (datalist){\r\n\r\n            // 多維轉二維\r\n            datalist = this.flatten(datalist);\r\n\r\n            // 第一次?\r\n            if (_is_init() === false){\r\n                global_org_template = $(global_selector).clone()[0];\r\n            }\r\n            \r\n            var timestamp = new Date().getTime(); // 時間戳記\r\n            var cppy_class = \"cppy-\" + timestamp; // 類別\r\n\r\n            $(global_org_template).attr(\"data-cppy-class\", cppy_class)\r\n            var template_html = global_org_template.outerHTML;\r\n\r\n\r\n            var box    = [];\r\n            var boxkey = 0;\r\n            \r\n            // 批次替換後合併。 如 {id: 100} ，會把 $id 替換為 100\r\n            $.each(datalist, function (key, datainfo){\r\n                box[boxkey] = _cppy.key2val(template_html, datainfo);\r\n                box[boxkey] = _switch_background(box[boxkey]);\r\n                boxkey++;\r\n            })\r\n\r\n            var mix_html_code = box.join('');\r\n\r\n            return {\r\n                cppy_class: cppy_class,\r\n                timestamp: timestamp,\r\n                html: mix_html_code,\r\n                datalist: datalist\r\n            };\r\n        }\r\n\r\n        this.key2val = function (code, datainfo){\r\n            var target = code;\r\n            $.each(datainfo, function (key, val){\r\n                var re = new RegExp(\"\\\\$\" + key, \"g\");\r\n                target = target.replace(re, val)\r\n            })\r\n            return target;\r\n        }\r\n\r\n        // 初始化?\r\n        var _is_init = function (){\r\n            return global_isinit === true;\r\n        }\r\n\r\n        // 設定初始標記\r\n        var _set_init = function (bool){\r\n            global_isinit = bool;\r\n        }\r\n\r\n        // 將新的編碼換置原來的模板位置\r\n        this.put = function (newcode){\r\n\r\n            //第一次，就加入模板後方，並將模板移除\r\n            if (_is_init() === false) {\r\n                $(global_selector).after(newcode);\r\n                $(global_selector).first().remove();\r\n            }\r\n            //第二次以後，在所有元素的後方加入\r\n            else {\r\n                $(global_selector).last().after(newcode)\r\n            }\r\n\r\n            // 顯示\r\n            _display_cppy_result_template(global_selector)\r\n        }\r\n\r\n        // 指派選擇器\r\n        var _set_selector = function (ele){\r\n\r\n            if (global_selector === ele) return false;\r\n            \r\n            // 若是新的選擇器，需要將重設初始化標記\r\n            global_selector = ele;\r\n            _set_init(false);\r\n\r\n            return true;\r\n        }\r\n\r\n        // 目標存在？\r\n        var _is_exist_selector = function (){\r\n            return $(global_selector).length >= 0;\r\n        }\r\n\r\n        // 顯示複製後的成果\r\n        var _display_cppy_result_template = function (selector){\r\n            $(selector).removeAttr('data-cppy-temp')\r\n        }\r\n\r\n        this.main = function (param){\r\n\r\n            _cppy    = this;\r\n            _set_selector(param.ele);\r\n\r\n\r\n            // 忽略不存在\r\n            if (_is_exist_selector() === false) return false;\r\n\r\n            // 無論如何都轉為二維\r\n            var input_data = _cppy.prepare_data(param.data);\r\n\r\n            var temp = _cppy.template(input_data);\r\n\r\n            // \r\n            if (param.success) {\r\n                // console.log(temp)\r\n                param.success.call(this, temp);\r\n                var leng = $(\"[data-cppy-class=\"+temp.cppy_class+\"]\").length;\r\n                _display_cppy_result_template(\"[data-cppy-class=\"+temp.cppy_class+\"]\")\r\n            }\r\n            else {\r\n                _cppy.put(temp.html);\r\n            }\r\n\r\n            // 初始化標記\r\n            if (_is_init() === false) _set_init(true);\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        this.main(param);\r\n    }\r\n    \r\n    $.fn.cppy = function(selector, data, success) {\r\n        $.cppy.create({\r\n            ele: selector,\r\n            data: data,\r\n            success: success\r\n        })\r\n    };\r\n\r\n}( jQuery ));\r\n"]}